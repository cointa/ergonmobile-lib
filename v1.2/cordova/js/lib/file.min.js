app.file={},app.file.readLocalJSON=(location,filename,onSuccess,onFail)=>{let filepath=location+filename;window.resolveLocalFileSystemURL(filepath,fileEntry=>{fileEntry.file(file=>{let reader=new FileReader;reader.onloadend=evt=>onSuccess(JSON.parse(evt.target.result)),reader.readAsText(file)},err=>onFail(err))},err=>onFail(err))},app.file.writeLocalJSON=(location,filename,data,onSuccess,onFail)=>{data=JSON.stringify(data,null,"\t"),window.resolveLocalFileSystemURL(location,directoryEntry=>{directoryEntry.getFile(filename,{create:!0},fileEntry=>{fileEntry.createWriter(fileWriter=>{fileWriter.onwriteend=()=>onSuccess(data),fileWriter.onerror=err=>onFail(err);let blob=new Blob([data],{type:"text/plain"});fileWriter.write(blob)},err=>onFail(err))},err=>onFail(err))},err=>onFail(err))},app.file.upload=(filePath,onSuccess,onFail,onBegin)=>{window.resolveLocalFileSystemURL(filePath,fileEntry=>{fileEntry.file(file=>{if(file.size/1e3<=1024*app.config.upload.maxSize){let options=new FileUploadOptions;options.httpMethod="POST",options.chunkedMode=!0;let filename,headers={"Content-Type":"application/octet-stream","X-Filename":filePath.substr(filePath.lastIndexOf("/")+1),"X-Pathname":app.config.upload.path},ft;options.headers=headers,(new FileTransfer).upload(filePath,encodeURI(app.config.upload.url),r=>{if(r.response.length>0)onSuccess(r);else{let err;onFail({code:"UPLOAD_EMPTY_RESPONSE",name:"Empty Response Error"})}},err=>onFail(err),options,!0)}else{let err;onFail({code:"UPLOAD_MAX_SIZE_EXCEEDED",name:"File Too Big Error"})}},err=>onFail(err))},err=>onFail(err)),onBegin()};